{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","App","useState","sortedGoods","setSortedGoods","isReversed","setIsReversed","sortType","setSortType","className","type","classNames","onClick","orderAbc","sort","reverse","orderLength","a","b","length","reverOrder","join","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAM,WACjB,MAAsCC,mBAAS,GAAD,OAAKF,IAAnD,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCJ,mBAAS,MAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAqCA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAyB,iBAAbJ,IAEhBK,QA7CmB,WACzB,IAAKP,GAAeA,GAA2B,iBAAbE,EAA8B,CAC9D,IAAMM,EAAWR,EACb,YAAIF,GAAaW,OAAOC,UACxB,YAAIZ,GAAaW,OAErBV,EAAeS,GACfL,EAAY,kBA+BV,iCAYA,wBACEE,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAyB,WAAbJ,IAElBK,QA/Ca,WACnB,IAAKP,GAAeA,GAA2B,WAAbE,EAAwB,CACxD,IAAMS,EAAcX,EAChB,YAAIF,GAAaW,MAAK,SAACG,EAAGC,GAAJ,OAAUA,EAAEC,OAASF,EAAEE,UAC7C,YAAIhB,GAAaW,MAAK,SAACG,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAEjDf,EAAeY,GACfR,EAAY,YAgCV,4BAcA,wBACEE,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAA2B,IAAfN,IAElBO,QAlDa,WACnB,IAAMQ,EAAa,YAAIjB,GAAaY,UAEpCX,EAAegB,GACfd,GAAeD,IAsCX,qBAaCF,EAAYkB,KAAK,MAAQrB,EAAgBqB,KAAK,KAC7C,wBACEX,KAAK,SACLD,UAAU,4BACVG,QApDS,WACjBR,EAAe,GAAD,OAAKJ,IACnBM,GAAc,GACdE,EAAY,OA8CN,sBAUJ,6BACGL,EAAYmB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC9GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dcd90217.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App = () => {\n  const [sortedGoods, setSortedGoods] = useState([...goodsFromServer]);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(null);\n\n  const sortAlphabetically = () => {\n    if (!isReversed || (isReversed && sortType !== 'alphabetical')) {\n      const orderAbc = isReversed\n        ? [...sortedGoods].sort().reverse()\n        : [...sortedGoods].sort();\n\n      setSortedGoods(orderAbc);\n      setSortType('alphabetical');\n    }\n  };\n\n  const sortByLength = () => {\n    if (!isReversed || (isReversed && sortType !== 'length')) {\n      const orderLength = isReversed\n        ? [...sortedGoods].sort((a, b) => b.length - a.length)\n        : [...sortedGoods].sort((a, b) => a.length - b.length);\n\n      setSortedGoods(orderLength);\n      setSortType('length');\n    }\n  };\n\n  const reverseOrder = () => {\n    const reverOrder = [...sortedGoods].reverse();\n\n    setSortedGoods(reverOrder);\n    setIsReversed(!isReversed);\n  };\n\n  const resetOrder = () => {\n    setSortedGoods([...goodsFromServer]);\n    setIsReversed(false);\n    setSortType(null);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== 'alphabetical' },\n          )}\n          onClick={sortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== 'length' },\n            )}\n          onClick={sortByLength}\n\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames(\n              'button',\n              'is-warning',\n              { 'is-light': isReversed === false },\n            )}\n          onClick={reverseOrder}\n        >\n          Reverse\n        </button>\n\n        {sortedGoods.join('') !== goodsFromServer.join('') && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetOrder}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}